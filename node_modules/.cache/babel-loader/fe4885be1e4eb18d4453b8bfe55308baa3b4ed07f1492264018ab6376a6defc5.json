{"ast":null,"code":"var _jsxFileName = \"C:\\\\company_dashboard\\\\src\\\\components\\\\FinancialStatements.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Card, CardContent, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button, Box, Snackbar, Alert } from '@mui/material';\nimport { ContentCopy, Check } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinancialStatements = () => {\n  _s();\n  const [copiedField, setCopiedField] = useState(null);\n  const [showSnackbar, setShowSnackbar] = useState(false);\n\n  // Mock financial data - replace with actual data\n  const financialData = {\n    'Revenue': {\n      '2020': 12500,\n      '2021': 14200,\n      '2022': 16800,\n      '2023': 19500,\n      '2024E': 22500,\n      '2025E': 25800,\n      '2026E': 29500\n    },\n    'Revenue y/y': {\n      '2020': 'N/A',\n      '2021': '13.6%',\n      '2022': '18.3%',\n      '2023': '16.1%',\n      '2024E': '15.4%',\n      '2025E': '14.7%',\n      '2026E': '14.3%'\n    },\n    'Gross profit': {\n      '2020': 8750,\n      '2021': 10200,\n      '2022': 12200,\n      '2023': 14300,\n      '2024E': 16800,\n      '2025E': 19500,\n      '2026E': 22500\n    },\n    'Gross profit y/y': {\n      '2020': 'N/A',\n      '2021': '16.6%',\n      '2022': '19.6%',\n      '2023': '17.2%',\n      '2024E': '17.5%',\n      '2025E': '16.1%',\n      '2026E': '15.4%'\n    },\n    'Gross margin %': {\n      '2020': '70.0%',\n      '2021': '71.8%',\n      '2022': '72.6%',\n      '2023': '73.3%',\n      '2024E': '74.7%',\n      '2025E': '75.6%',\n      '2026E': '76.3%'\n    },\n    'Operating Profit, Adj.': {\n      '2020': 3750,\n      '2021': 4400,\n      '2022': 5400,\n      '2023': 6500,\n      '2024E': 7800,\n      '2025E': 9200,\n      '2026E': 10800\n    },\n    'Operating Profit, Adj. y/y': {\n      '2020': 'N/A',\n      '2021': '17.3%',\n      '2022': '22.7%',\n      '2023': '20.4%',\n      '2024E': '20.0%',\n      '2025E': '17.9%',\n      '2026E': '17.4%'\n    },\n    'Operating Margin %': {\n      '2020': '30.0%',\n      '2021': '31.0%',\n      '2022': '32.1%',\n      '2023': '33.3%',\n      '2024E': '34.7%',\n      '2025E': '35.7%',\n      '2026E': '36.6%'\n    },\n    'EPS': {\n      '2020': 2.85,\n      '2021': 3.45,\n      '2022': 4.25,\n      '2023': 5.15,\n      '2024E': 6.20,\n      '2025E': 7.35,\n      '2026E': 8.60\n    },\n    'EPS y/y': {\n      '2020': 'N/A',\n      '2021': '21.1%',\n      '2022': '23.2%',\n      '2023': '21.2%',\n      '2024E': '20.4%',\n      '2025E': '18.5%',\n      '2026E': '17.0%'\n    },\n    'Op. CF': {\n      '2020': 4200,\n      '2021': 4800,\n      '2022': 5800,\n      '2023': 7000,\n      '2024E': 8400,\n      '2025E': 9900,\n      '2026E': 11600\n    },\n    'CAPEX': {\n      '2020': 1800,\n      '2021': 2100,\n      '2022': 2500,\n      '2023': 3000,\n      '2024E': 3600,\n      '2025E': 4200,\n      '2026E': 4900\n    },\n    'FCF': {\n      '2020': 2400,\n      '2021': 2700,\n      '2022': 3300,\n      '2023': 4000,\n      '2024E': 4800,\n      '2025E': 5700,\n      '2026E': 6700\n    },\n    'Net Debt': {\n      '2020': 8500,\n      '2021': 7800,\n      '2022': 6800,\n      '2023': 5500,\n      '2024E': 3800,\n      '2025E': 1800,\n      '2026E': -500\n    },\n    'Net Debt/EBITDA': {\n      '2020': '2.1x',\n      '2021': '1.8x',\n      '2022': '1.4x',\n      '2023': '1.0x',\n      '2024E': '0.6x',\n      '2025E': '0.2x',\n      '2026E': '0.0x'\n    }\n  };\n  const years = ['2020', '2021', '2022', '2023', '2024E', '2025E', '2026E'];\n  const metrics = ['Revenue', 'Revenue y/y', 'Gross profit', 'Gross profit y/y', 'Gross margin %', 'Operating Profit, Adj.', 'Operating Profit, Adj. y/y', 'Operating Margin %', 'EPS', 'EPS y/y', 'Op. CF', 'CAPEX', 'FCF', 'Net Debt', 'Net Debt/EBITDA'];\n  const formatValue = (value, metric) => {\n    if (typeof value === 'string') return value;\n    if (metric.includes('margin') || metric.includes('y/y')) {\n      return `${value}%`;\n    } else if (metric === 'EPS') {\n      return `$${value.toFixed(2)}`;\n    } else if (metric.includes('Debt/EBITDA')) {\n      return `${value}x`;\n    } else {\n      return `$${value.toFixed(0)}m`;\n    }\n  };\n  const copyToClipboard = async (value, fieldName) => {\n    try {\n      await navigator.clipboard.writeText(value);\n      setCopiedField(fieldName);\n      setShowSnackbar(true);\n      setTimeout(() => setCopiedField(null), 2000);\n    } catch (err) {\n      console.error('Failed to copy: ', err);\n    }\n  };\n  const isItalic = metric => {\n    return metric.includes('margin') || metric.includes('y/y');\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      mb: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: \"Financial Statements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: \"FYE-Dec, $m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        sx: {\n          maxHeight: 600\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  fontWeight: 'bold',\n                  minWidth: 200\n                },\n                children: \"Metric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), years.map(year => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                sx: {\n                  fontWeight: 'bold',\n                  minWidth: 100\n                },\n                children: year\n              }, year, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                sx: {\n                  minWidth: 50\n                },\n                children: \"Copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: metrics.map(metric => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                sx: {\n                  fontWeight: 'bold',\n                  fontStyle: isItalic(metric) ? 'italic' : 'normal'\n                },\n                children: metric\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this), years.map(year => {\n                const value = financialData[metric][year];\n                const formattedValue = formatValue(value, metric);\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    sx: {\n                      fontStyle: isItalic(metric) ? 'italic' : 'normal',\n                      color: typeof value === 'number' && value < 0 ? 'error.main' : 'inherit'\n                    },\n                    children: formattedValue\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 25\n                  }, this)\n                }, year, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  startIcon: copiedField === metric ? /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 59\n                  }, this) : /*#__PURE__*/_jsxDEV(ContentCopy, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 71\n                  }, this),\n                  onClick: () => {\n                    const latestValue = financialData[metric][years[years.length - 1]];\n                    copyToClipboard(formatValue(latestValue, metric), metric);\n                  },\n                  sx: {\n                    minWidth: 'auto'\n                  },\n                  children: copiedField === metric ? 'Copied' : 'Copy'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, metric, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: showSnackbar,\n        autoHideDuration: 2000,\n        onClose: () => setShowSnackbar(false),\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: () => setShowSnackbar(false),\n          severity: \"success\",\n          sx: {\n            width: '100%'\n          },\n          children: \"Copied to clipboard!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(FinancialStatements, \"BEnMYRk6cgOaCBatTWlu4mnHMD8=\");\n_c = FinancialStatements;\nexport default FinancialStatements;\nvar _c;\n$RefreshReg$(_c, \"FinancialStatements\");","map":{"version":3,"names":["React","useState","Card","CardContent","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Button","Box","Snackbar","Alert","ContentCopy","Check","jsxDEV","_jsxDEV","FinancialStatements","_s","copiedField","setCopiedField","showSnackbar","setShowSnackbar","financialData","years","metrics","formatValue","value","metric","includes","toFixed","copyToClipboard","fieldName","navigator","clipboard","writeText","setTimeout","err","console","error","isItalic","sx","mb","children","display","justifyContent","alignItems","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","color","maxHeight","stickyHeader","size","fontWeight","minWidth","map","year","align","hover","scope","fontStyle","formattedValue","startIcon","onClick","latestValue","length","open","autoHideDuration","onClose","severity","width","_c","$RefreshReg$"],"sources":["C:/company_dashboard/src/components/FinancialStatements.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { \r\n  Card, \r\n  CardContent, \r\n  Typography, \r\n  Table, \r\n  TableBody, \r\n  TableCell, \r\n  TableContainer, \r\n  TableHead, \r\n  TableRow, \r\n  Paper,\r\n  Button,\r\n  Box,\r\n  Snackbar,\r\n  Alert\r\n} from '@mui/material';\r\nimport { ContentCopy, Check } from '@mui/icons-material';\r\n\r\ninterface FinancialData {\r\n  [key: string]: {\r\n    [year: string]: number | string;\r\n  };\r\n}\r\n\r\nconst FinancialStatements: React.FC = () => {\r\n  const [copiedField, setCopiedField] = useState<string | null>(null);\r\n  const [showSnackbar, setShowSnackbar] = useState(false);\r\n\r\n  // Mock financial data - replace with actual data\r\n  const financialData: FinancialData = {\r\n    'Revenue': {\r\n      '2020': 12500,\r\n      '2021': 14200,\r\n      '2022': 16800,\r\n      '2023': 19500,\r\n      '2024E': 22500,\r\n      '2025E': 25800,\r\n      '2026E': 29500\r\n    },\r\n    'Revenue y/y': {\r\n      '2020': 'N/A',\r\n      '2021': '13.6%',\r\n      '2022': '18.3%',\r\n      '2023': '16.1%',\r\n      '2024E': '15.4%',\r\n      '2025E': '14.7%',\r\n      '2026E': '14.3%'\r\n    },\r\n    'Gross profit': {\r\n      '2020': 8750,\r\n      '2021': 10200,\r\n      '2022': 12200,\r\n      '2023': 14300,\r\n      '2024E': 16800,\r\n      '2025E': 19500,\r\n      '2026E': 22500\r\n    },\r\n    'Gross profit y/y': {\r\n      '2020': 'N/A',\r\n      '2021': '16.6%',\r\n      '2022': '19.6%',\r\n      '2023': '17.2%',\r\n      '2024E': '17.5%',\r\n      '2025E': '16.1%',\r\n      '2026E': '15.4%'\r\n    },\r\n    'Gross margin %': {\r\n      '2020': '70.0%',\r\n      '2021': '71.8%',\r\n      '2022': '72.6%',\r\n      '2023': '73.3%',\r\n      '2024E': '74.7%',\r\n      '2025E': '75.6%',\r\n      '2026E': '76.3%'\r\n    },\r\n    'Operating Profit, Adj.': {\r\n      '2020': 3750,\r\n      '2021': 4400,\r\n      '2022': 5400,\r\n      '2023': 6500,\r\n      '2024E': 7800,\r\n      '2025E': 9200,\r\n      '2026E': 10800\r\n    },\r\n    'Operating Profit, Adj. y/y': {\r\n      '2020': 'N/A',\r\n      '2021': '17.3%',\r\n      '2022': '22.7%',\r\n      '2023': '20.4%',\r\n      '2024E': '20.0%',\r\n      '2025E': '17.9%',\r\n      '2026E': '17.4%'\r\n    },\r\n    'Operating Margin %': {\r\n      '2020': '30.0%',\r\n      '2021': '31.0%',\r\n      '2022': '32.1%',\r\n      '2023': '33.3%',\r\n      '2024E': '34.7%',\r\n      '2025E': '35.7%',\r\n      '2026E': '36.6%'\r\n    },\r\n    'EPS': {\r\n      '2020': 2.85,\r\n      '2021': 3.45,\r\n      '2022': 4.25,\r\n      '2023': 5.15,\r\n      '2024E': 6.20,\r\n      '2025E': 7.35,\r\n      '2026E': 8.60\r\n    },\r\n    'EPS y/y': {\r\n      '2020': 'N/A',\r\n      '2021': '21.1%',\r\n      '2022': '23.2%',\r\n      '2023': '21.2%',\r\n      '2024E': '20.4%',\r\n      '2025E': '18.5%',\r\n      '2026E': '17.0%'\r\n    },\r\n    'Op. CF': {\r\n      '2020': 4200,\r\n      '2021': 4800,\r\n      '2022': 5800,\r\n      '2023': 7000,\r\n      '2024E': 8400,\r\n      '2025E': 9900,\r\n      '2026E': 11600\r\n    },\r\n    'CAPEX': {\r\n      '2020': 1800,\r\n      '2021': 2100,\r\n      '2022': 2500,\r\n      '2023': 3000,\r\n      '2024E': 3600,\r\n      '2025E': 4200,\r\n      '2026E': 4900\r\n    },\r\n    'FCF': {\r\n      '2020': 2400,\r\n      '2021': 2700,\r\n      '2022': 3300,\r\n      '2023': 4000,\r\n      '2024E': 4800,\r\n      '2025E': 5700,\r\n      '2026E': 6700\r\n    },\r\n    'Net Debt': {\r\n      '2020': 8500,\r\n      '2021': 7800,\r\n      '2022': 6800,\r\n      '2023': 5500,\r\n      '2024E': 3800,\r\n      '2025E': 1800,\r\n      '2026E': -500\r\n    },\r\n    'Net Debt/EBITDA': {\r\n      '2020': '2.1x',\r\n      '2021': '1.8x',\r\n      '2022': '1.4x',\r\n      '2023': '1.0x',\r\n      '2024E': '0.6x',\r\n      '2025E': '0.2x',\r\n      '2026E': '0.0x'\r\n    }\r\n  };\r\n\r\n  const years = ['2020', '2021', '2022', '2023', '2024E', '2025E', '2026E'];\r\n  const metrics = [\r\n    'Revenue', 'Revenue y/y', 'Gross profit', 'Gross profit y/y', 'Gross margin %',\r\n    'Operating Profit, Adj.', 'Operating Profit, Adj. y/y', 'Operating Margin %',\r\n    'EPS', 'EPS y/y', 'Op. CF', 'CAPEX', 'FCF', 'Net Debt', 'Net Debt/EBITDA'\r\n  ];\r\n\r\n  const formatValue = (value: number | string, metric: string): string => {\r\n    if (typeof value === 'string') return value;\r\n    \r\n    if (metric.includes('margin') || metric.includes('y/y')) {\r\n      return `${value}%`;\r\n    } else if (metric === 'EPS') {\r\n      return `$${value.toFixed(2)}`;\r\n    } else if (metric.includes('Debt/EBITDA')) {\r\n      return `${value}x`;\r\n    } else {\r\n      return `$${value.toFixed(0)}m`;\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = async (value: string, fieldName: string) => {\r\n    try {\r\n      await navigator.clipboard.writeText(value);\r\n      setCopiedField(fieldName);\r\n      setShowSnackbar(true);\r\n      setTimeout(() => setCopiedField(null), 2000);\r\n    } catch (err) {\r\n      console.error('Failed to copy: ', err);\r\n    }\r\n  };\r\n\r\n  const isItalic = (metric: string): boolean => {\r\n    return metric.includes('margin') || metric.includes('y/y');\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ mb: 3 }}>\r\n      <CardContent>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            Financial Statements\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            FYE-Dec, $m\r\n          </Typography>\r\n        </Box>\r\n\r\n        <TableContainer component={Paper} sx={{ maxHeight: 600 }}>\r\n          <Table stickyHeader size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell sx={{ fontWeight: 'bold', minWidth: 200 }}>Metric</TableCell>\r\n                {years.map((year) => (\r\n                  <TableCell key={year} align=\"center\" sx={{ fontWeight: 'bold', minWidth: 100 }}>\r\n                    {year}\r\n                  </TableCell>\r\n                ))}\r\n                <TableCell align=\"center\" sx={{ minWidth: 50 }}>Copy</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {metrics.map((metric) => (\r\n                <TableRow key={metric} hover>\r\n                  <TableCell \r\n                    component=\"th\" \r\n                    scope=\"row\" \r\n                    sx={{ \r\n                      fontWeight: 'bold',\r\n                      fontStyle: isItalic(metric) ? 'italic' : 'normal'\r\n                    }}\r\n                  >\r\n                    {metric}\r\n                  </TableCell>\r\n                  {years.map((year) => {\r\n                    const value = financialData[metric][year];\r\n                    const formattedValue = formatValue(value, metric);\r\n                    return (\r\n                      <TableCell key={year} align=\"center\">\r\n                        <Typography\r\n                          sx={{\r\n                            fontStyle: isItalic(metric) ? 'italic' : 'normal',\r\n                            color: typeof value === 'number' && value < 0 ? 'error.main' : 'inherit'\r\n                          }}\r\n                        >\r\n                          {formattedValue}\r\n                        </Typography>\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                  <TableCell align=\"center\">\r\n                    <Button\r\n                      size=\"small\"\r\n                      startIcon={copiedField === metric ? <Check /> : <ContentCopy />}\r\n                      onClick={() => {\r\n                        const latestValue = financialData[metric][years[years.length - 1]];\r\n                        copyToClipboard(formatValue(latestValue, metric), metric);\r\n                      }}\r\n                      sx={{ minWidth: 'auto' }}\r\n                    >\r\n                      {copiedField === metric ? 'Copied' : 'Copy'}\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        <Snackbar\r\n          open={showSnackbar}\r\n          autoHideDuration={2000}\r\n          onClose={() => setShowSnackbar(false)}\r\n        >\r\n          <Alert onClose={() => setShowSnackbar(false)} severity=\"success\" sx={{ width: '100%' }}>\r\n            Copied to clipboard!\r\n          </Alert>\r\n        </Snackbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default FinancialStatements; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}